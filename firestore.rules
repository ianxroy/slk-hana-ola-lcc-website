rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- USER MANAGEMENT ---
    // Users can read their own document. Admins can read any user document.
    // User creation is handled by the secure /api/create-user endpoint and is disallowed from the client.
    // Admins can update user roles and statuses.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create, delete: if false;
    }

    // --- PROMOTION MANAGEMENT ---
    // Anyone can read promotions for the banner.
    // Only admins can create, update, or delete promotions.
    match /promotions/{promoId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- TESTIMONIAL MANAGEMENT ---
    // Anyone can read testimonials.
    // Only admins can create, update, or delete testimonials.
    match /testimonials/{testimonialId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- EMPLOYEE TIME CLOCK ---
    // A user can only create a time log for themselves.
    // A user can read their own time logs. Admins can read all time logs.
    // No one can update or delete time logs from the client for data integrity.
    match /timeLogs/{logId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        allow update, delete: if false;
    }
  }
}
