rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- USER MANAGEMENT ---
    // The `users` collection is locked down. 
    // New users are created via a secure admin process, not directly by clients.
    match /users/{userId} {
      // READ: A user can read their own profile. Admins can read any profile.
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // UPDATE: A user can update their own profile (e.g. for profile picture). Admins can update any user.
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // CREATE: Disallowed from client. Handled by secure server-side function.
      allow create: if false; 
      
      // DELETE: Disallowed from client for data integrity.
      allow delete: if false;
    }
    // LIST: Only admins can list all users.
    match /users/{document=**} {
        allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }


    // --- REGISTRATION REQUESTS ---
    // This collection is for users submitting registration forms.
    match /registrationRequests/{reqId} {
        // CREATE: Anyone can submit a registration request.
        allow create: if true;
        
        // READ/DELETE: Only admins can read or delete registration requests.
        allow read, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        // UPDATE: Disallowed. Admins either approve (creating a new user) or reject (deleting the request).
        allow update: if false;
    }
    
    // Allow admins to list all requests.
    match /registrationRequests/{document=**} {
        allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- PROMOTION MANAGEMENT ---
    match /promotions/{promoId} {
      // Anyone can read promotions for the banner
      allow read: if true;
      // Only admins can create, update, or delete promotions
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- TESTIMONIAL MANAGEMENT ---
    match /testimonials/{testimonialId} {
        // Anyone can read testimonials
        allow read: if true;
        // Only admins can create, update, or delete testimonials
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- EMPLOYEE TIME CLOCK ---
    match /timeLogs/{logId} {
        // A user can only create a time log for themselves
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // A user can read their own time logs. Admins can read all time logs.
        allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        // No one can update or delete time logs from the client for data integrity.
        allow update, delete: if false;
    }
     // Allow admins and the specific user to list their own time logs.
    match /timeLogs/{document=**} {
       allow list: if request.auth != null;
    }
  }
}
